function addEvent(o, v, fu) {    if(Agent.isIE){		o.attachEvent('on' + v, fu, false);			}	else{				o.addEventListener(v, fu, false);	}} // //for browser only// var windoweventkeyCode = window.event ? window.event.keyCode : null;// var windowevent = window.event;var Agent;(function() {	Agent = { };	var o = navigator.userAgent, ver = navigator.appVersion, n = parseFloat(ver);	var idx = Math.max(ver.indexOf("WebKit"), ver.indexOf("Safari"), 0);	if(idx) Agent.isSafari = parseFloat(ver.split("Version/")[1]) || ((parseFloat(ver.substr(idx + 7)) >= 419.3) ? 3 : 2) || 2;	Agent.isOpera = (o.indexOf("Opera") >= 0) ? n : false;	Agent.isKhtml = (ver.indexOf("Konqueror") >= 0 || Agent.isSafari) ? n : false;	Agent.isMoz = (o.indexOf("Gecko") >= 0 && !Agent.isKhtml) ? n : false;	Agent.isFF = Agent.isIE = false;	if(Agent.isMoz) Agent.isFF = parseFloat(o.split("Firefox/")[1]) || false;	if(document.all && !Agent.isOpera) Agent.isIE = parseFloat(ver.split("MSIE ")[1]) || false;		Agent.isMac = (o.indexOf('Mac') >= 0);	Agent.isWin = (((o.indexOf('Win') >= 0) || (o.indexOf('NT') >= 0) ) && !Agent.isMac) ? true : false;	Agent.isLinux = (o.indexOf('Linux') >= 0);	Agent.isWindows = o == "Windows";})();function htmlEscape(e) {	    return /[&<>\"]/.test(e) ? e.replace(/&/g,"&amp;")                                               .replace(/</g,"&lt;")                                               .replace(/>/g,"&gt;")                                               .replace(/\"/g,"&quot;") : e;}function makeIframeTag(e) {	    var c = "<iframe";	    for (var f in e) {		c += " " + f + '="' + this.htmlEscape(e[f]) + '"';	    }	    return c + "></iframe>";}function getIframe(win, frameId) {	    try {			return win.frames[frameId];	    } catch (e) {			return null;	    }} function makeIframeNode(attribs) {	    var el = document.createElement("iframe");	    for (var a in attribs) {			el.setAttribute(a, attribs[a]);	    }	    return el;}function appendToQuery(key, config, url) {	var val = config[key];	if (key && val) {	    url += "&" + key + "=" + val;	}	return url;}function buildQueryUrl(config) {	var url = 'http://localhost/canvasad/pagead.html?f=1';	url = 'pagead.html?f=1';	url = appendToQuery('canvas_ad_client', config, url);	url = appendToQuery('canvas_ad_width', config, url);	url = appendToQuery('canvas_ad_height', config, url);	url = appendToQuery('canvas_color_border', config, url);	url = appendToQuery('canvas_color_bg', config, url);	url = appendToQuery('canvas_color_fill', config, url);	url = appendToQuery('canvas_color_text', config, url);	return url;}function quoteString(b) {	return b != null ? '"' + b + '"' : '""';}function makeAd(config){	var doc = document;	var iframe = makeIframeNode({		name: "canvas_ads_frame",		width: config.canvas_ad_width,		height: config.canvas_ad_height,		marginwidth: 0,		marginheight: 0,		scrolling: "no",		vspace: 0,		hspace: 0,		frameborder: config.canvas_ad_frameborder,		src: buildQueryUrl(config),		allowTransparency: true	});	//console.log('url=' + buildQueryUrl(config));	var container = doc.getElementById(config.canvas_container) || doc.body; 	container.appendChild(iframe);}addEvent(window, 'load', function() {	var config = {		canvas_ad_client: canvas_ad_client,		canvas_ad_width: canvas_ad_width,		canvas_ad_height: canvas_ad_height,		canvas_color_border: canvas_color_border,		canvas_color_bg: canvas_color_bg,		canvas_color_fill: canvas_color_fill,		canvas_color_text: canvas_color_text,		canvas_container: canvas_container	}	return function(){		makeAd(config);	}}());